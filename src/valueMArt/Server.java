/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Server.java
 *
 * Created on Jan 13, 2012, 7:30:55 PM
 */
package valueMArt;

import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fhad khan
 */
public class Server extends javax.swing.JFrame {

    /** Creates new form Server */
    public Server() {
        model=new javax.swing.table.DefaultTableModel(
                    new Object[][]{},new String[]{
                "UserName","PassWord","Employee Type"

            }){
                Class [] type=new Class[]{
                    java.lang.String.class,java.lang.String.class,java.lang.String.class
                };
                boolean[] canEdit =new boolean []{
                    false,false,false
                };
                
                public Class getColmnClass(int columnIndex){
                    return type[columnIndex];

                }
            @Override
                public boolean isCellEditable(int rowindex,int columnIndex){
                    return canEdit[columnIndex];
                }
            };

        initComponents();
        tb_server=new JTable(model);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        start();
    }
    public void start() {
        try {
            ss=new ServerSocket(2000);
            System.out.println("waiting for client ...");
            while(true) {
                s = ss.accept();
                System.out.println("client Accepted...");
                in = new ObjectInputStream(s.getInputStream());
                loginObj = (valueMArt.login) in.readObject();
                model.addRow(new Object[]{loginObj.getName(),loginObj.getPass(),loginObj.getEType()});
                in.close();
                s.close();
                System.out.println("closed");
                if(loginObj.getEType().equals("Stockist")){
                    new valueMArt.Stock().setVisible(true);
                }else if(loginObj.getEType().equals("Sales Staff")){
                    new valueMArt.Sales().setVisible(true);
                }else{
                    new valueMart.LoginFrame().setVisible(true);
                }
            }
        }catch (Exception e){
            System.out.println(e.getMessage());
        }        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_server = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server");
        setResizable(false);

        jLabel4.setFont(new java.awt.Font("Forte", 1, 18)); // NOI18N
        jLabel4.setText("Server");

        tb_server.setModel(model);
        jScrollPane1.setViewportView(tb_server);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    public static void main(String args[]) {
        new Server();
    }
    /**
     * @param args the command line arguments
     */
    private Socket s;
    private ObjectInputStream in;
    private ServerSocket ss;
    valueMArt.login loginObj;
    private DefaultTableModel model;    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_server;
    // End of variables declaration//GEN-END:variables
}
