/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * updateStock.java
 *
 * Created on Jan 5, 2012, 8:57:27 PM
 */

package valueMart;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author FhAD khAn
 */
public class updateStock extends javax.swing.JFrame {

    /** Creates new form updateStock */
    public updateStock() {
        initComponents();
        /* Set System Time and Date*/
        Calendar cal = new GregorianCalendar();
      String hour = String.valueOf(cal.get(Calendar.HOUR_OF_DAY));
      String minute = String.valueOf(cal.get(Calendar.MINUTE));
      String second = String.valueOf(cal.get(Calendar.SECOND));
      time.setText(hour + ":" + minute + ":" + second);
      
        Calendar Cal=Calendar.getInstance();
        SimpleDateFormat simple=new SimpleDateFormat("dd/MM/yyyy");
        date.setText(simple.format(Cal.getTime()));

        /* MySQl connection */
      
        String url = "jdbc:mysql://localhost:3306/valuemart";
        String user = "root";
        String password = "";

        cb_catageryId.removeAllItems();
        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            statement = (Statement) connection.createStatement();
            resultset=statement.executeQuery("Select  CID from stock ");
            while (resultset.next()) {
                String CId=resultset.getString(1);
                cb_catageryId.addItem(CId);
                            
            }
            
         } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
        check=true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ManageOrder19 = new javax.swing.JLabel();
        ManageOrder20 = new javax.swing.JLabel();
        ManageOrder21 = new javax.swing.JLabel();
        ManageOrder23 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        ManageOrder24 = new javax.swing.JLabel();
        qunatity = new javax.swing.JTextField();
        ManageOrder26 = new javax.swing.JLabel();
        dispatch = new javax.swing.JTextField();
        PlaceOrder3 = new javax.swing.JButton();
        PlaceOrder4 = new javax.swing.JButton();
        cb_catageryId = new javax.swing.JComboBox();
        productId = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        ManageOrder3 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        ManageOrder4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Stock");
        setResizable(false);

        ManageOrder19.setFont(new java.awt.Font("Forte", 1, 14));
        ManageOrder19.setText("Update Stock");

        ManageOrder20.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder20.setText("Catalog ID");

        ManageOrder21.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder21.setText("Product Id");

        ManageOrder23.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder23.setText("Stock price");

        Price.setEditable(false);
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });

        ManageOrder24.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder24.setText("Quantity Stock");

        qunatity.setEditable(false);
        qunatity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qunatityActionPerformed(evt);
            }
        });

        ManageOrder26.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder26.setText("Dispatch");

        dispatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchActionPerformed(evt);
            }
        });

        PlaceOrder3.setFont(new java.awt.Font("Forte", 1, 12));
        PlaceOrder3.setText("Exit");
        PlaceOrder3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceOrder3ActionPerformed(evt);
            }
        });

        PlaceOrder4.setFont(new java.awt.Font("Forte", 1, 12));
        PlaceOrder4.setText("update");
        PlaceOrder4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceOrder4ActionPerformed(evt);
            }
        });

        cb_catageryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_catageryIdActionPerformed(evt);
            }
        });

        productId.setEditable(false);
        productId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdActionPerformed(evt);
            }
        });

        time.setEnabled(false);
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        ManageOrder3.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder3.setText("Time");

        date.setEnabled(false);
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        ManageOrder4.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder4.setText("Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ManageOrder20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_catageryId, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(ManageOrder21)
                        .addGap(18, 18, 18)
                        .addComponent(productId, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ManageOrder24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(qunatity, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(ManageOrder26)
                                        .addGap(22, 22, 22)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(ManageOrder23)
                                        .addGap(18, 18, 18)
                                        .addComponent(Price, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dispatch, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ManageOrder4)
                                        .addGap(18, 18, 18)
                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PlaceOrder4)
                                .addGap(44, 44, 44)
                                .addComponent(PlaceOrder3)
                                .addGap(34, 34, 34)))
                        .addGap(156, 156, 156))))
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(ManageOrder19)
                .addContainerGap(233, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(ManageOrder3)
                .addGap(18, 18, 18)
                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(ManageOrder19)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder20)
                    .addComponent(cb_catageryId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder21)
                    .addComponent(productId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder3)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder4)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder23)
                    .addComponent(qunatity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder24))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dispatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder26))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlaceOrder4)
                    .addComponent(PlaceOrder3))
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void qunatityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qunatityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qunatityActionPerformed

    private void dispatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dispatchActionPerformed

    private void PlaceOrder3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceOrder3ActionPerformed
        System.exit(0); 
    }//GEN-LAST:event_PlaceOrder3ActionPerformed

    private void PlaceOrder4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceOrder4ActionPerformed
        String PID=productId.getText();
        String CID=cb_catageryId.getSelectedItem().toString();
        String quan=qunatity.getText();
        String price=Price.getText();
        String Date=date.getText();
        String Time=time.getText();
        quan=Integer.toString(Integer.parseInt(quan)-Integer.parseInt(dispatch.getText()));
        try {
            statement.executeUpdate("UPDATE  stock set PID='" + PID + "',CID='" + CID + "',StockQty='" + quan + "',Date='" + Date + "',Time='" + Time + "',Price='" + price + "'");
       
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }

    }//GEN-LAST:event_PlaceOrder4ActionPerformed

private void productIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_productIdActionPerformed

private void cb_catageryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_catageryIdActionPerformed
      String CID =cb_catageryId.getSelectedItem().toString();
    if(check==true){
        try{
            resultset=statement.executeQuery("Select PID,StockQty,Price from stock where CID='"+CID +"'  ");
                    while (resultset.next()) {
                        String PID=resultset.getString(1);
                        String quan=resultset.getString(2);
                        String price=resultset.getString(3);
                        
                        productId.setText(PID);
                        qunatity.setText(quan);
                        Price.setText(price);
                    }
                    
        } catch (Exception ex) {
                System.err.println(ex.getMessage());
        }
    }
}//GEN-LAST:event_cb_catageryIdActionPerformed

private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_timeActionPerformed

private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_dateActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateStock().setVisible(true);
            }
        });
    }
     private boolean check =false;
    private Connection connection;
    private Statement statement;
    private ResultSet resultset;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ManageOrder19;
    private javax.swing.JLabel ManageOrder20;
    private javax.swing.JLabel ManageOrder21;
    private javax.swing.JLabel ManageOrder23;
    private javax.swing.JLabel ManageOrder24;
    private javax.swing.JLabel ManageOrder26;
    private javax.swing.JLabel ManageOrder3;
    private javax.swing.JLabel ManageOrder4;
    private javax.swing.JButton PlaceOrder3;
    private javax.swing.JButton PlaceOrder4;
    private javax.swing.JTextField Price;
    private javax.swing.JComboBox cb_catageryId;
    private javax.swing.JTextField date;
    private javax.swing.JTextField dispatch;
    private javax.swing.JTextField productId;
    private javax.swing.JTextField qunatity;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables

}
