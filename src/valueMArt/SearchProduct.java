/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchProduct.java
 *
 * Created on Jan 5, 2012, 5:22:02 PM
 */

package valueMart;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FhAD khAn
 */
public class SearchProduct extends javax.swing.JFrame {

    /** Creates new form SearchProduct */
    public SearchProduct() {
        String url = "jdbc:mysql://localhost:3306/valuemart";
        String user = "root";
        String password = "";

        try {
            connection = DriverManager.getConnection(url, user, password);
            statement = connection.createStatement();


        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }

        model=new javax.swing.table.DefaultTableModel(
                    new Object[][]{},new String[]{
                "Product ID","Product Name","Product Brand","Product Size","Manufacture","Var","Descrp"

            }){
                Class [] type=new Class[]{
                    java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class
                };
                boolean[] canEdit =new boolean []{
                    false,false,false,false,false,false,false,false
                };
                
                public Class getColmnClass(int columnIndex){
                    return type[columnIndex];

                }
            @Override
                public boolean isCellEditable(int rowindex,int columnIndex){
                    return canEdit[columnIndex];
                }
            };


        initComponents();
        SearchTable=new JTable(model);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        SearchTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        SearchField = new javax.swing.JTextField();
        ManageOrder1 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        update1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search Product");
        setResizable(false);

        SearchTable.setModel(model);
        jScrollPane2.setViewportView(SearchTable);

        jLabel2.setFont(new java.awt.Font("Forte", 1, 12));
        jLabel2.setText("Product ID");

        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });

        ManageOrder1.setFont(new java.awt.Font("Forte", 1, 14));
        ManageOrder1.setText("           Search Product");

        Search.setFont(new java.awt.Font("Forte", 1, 12));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        update1.setFont(new java.awt.Font("Forte", 1, 12)); // NOI18N
        update1.setText("Exit");
        update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(update1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ManageOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ManageOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search)
                    .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 347, Short.MAX_VALUE)
                .addComponent(update1)
                .addGap(32, 32, 32))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(96, 96, 96)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(68, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_SearchFieldActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String Id=SearchField.getText();
        if(count==0){
                String qry=("Select * FROM product where ProductID='"+Id+"'");
                try {
                    resultset = statement.executeQuery(qry);
                    while(resultset.next()){
                        String CatalogID=resultset.getString(1);
                        String ProductID=resultset.getString(2);
                        String ProductName=resultset.getString(3);
                        String ProductBrand=resultset.getString(4);
                        String ProductSize=resultset.getString(5);
                        String Manufacture=resultset.getString(6);
                        String variety=resultset.getString(7);
                        String ProductDescription=resultset.getString(8);
                        model.addRow(new Object[]{ProductID,ProductName,ProductBrand,ProductSize,Manufacture,variety,ProductDescription});
                        count++;
                    }

                } catch (Exception ex) {
                   ex.getMessage();
                }
                        
            }else if(count!=0){
                int row=model.getRowCount()-1;
                String PID=(model.getValueAt(row,0)).toString();
                if(PID.equals(Id)){
                JOptionPane.showMessageDialog(this,"Record AllReady printed");
                }else{
                    String qry=("Select * FROM product where ProductID='"+Id+"'");
                    try {
                        resultset = statement.executeQuery(qry);
                        while(resultset.next()){
                            String CatalogID=resultset.getString(1);
                            String ProductID=resultset.getString(2);
                            String ProductName=resultset.getString(3);
                            String ProductBrand=resultset.getString(4);
                            String ProductSize=resultset.getString(5);
                            String Manufacture=resultset.getString(6);
                            String variety=resultset.getString(7);
                            String ProductDescription=resultset.getString(8);
                            model.addRow(new Object[]{ProductID,ProductName,ProductBrand,ProductSize,Manufacture,variety,ProductDescription});
                        }

                    } catch (Exception ex) {
                       ex.getMessage();
                    }
               }
            }
        
}//GEN-LAST:event_SearchActionPerformed

    private void update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1ActionPerformed
   System.exit(0);
}//GEN-LAST:event_update1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchProduct().setVisible(true);
            }
        });
    }
    private DefaultTableModel model;
    private Connection connection;
    private Statement statement;
    private ResultSet resultset;
    private static int count=0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ManageOrder1;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SearchField;
    private javax.swing.JTable SearchTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton update1;
    // End of variables declaration//GEN-END:variables

}
