/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MySQL.java
 *
 * Created on Jan 4, 2012, 3:32:13 PM
 */

package valueMart;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;

/**
 *
 * @author FhAD khAn
 */
public class MySQL extends javax.swing.JFrame {

    /** Creates new form MySQL */
    public MySQL() {

        initComponents();
        String url = "jdbc:mysql://localhost:3306/valuemart";
        String user = "root";
        String password = "";

        try {
            connection = DriverManager.getConnection(url, user, password);
            statement = connection.createStatement();
            Login();
           
           
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        } finally {
            try {
                if (resultset != null) {
                    resultset.close();
                }
                if (statement != null) {
                    statement.close();
                }
                if (connection != null) {
                    connection.close();
                }

            } catch (Exception ex) {
                System.err.println("Finally: " + ex.getMessage());
            }
        }
    }

   
   public void Login() throws Exception{
       String UserName= new MySQL().userName;
        String qry="SELECT Username,Password,Department from login where Username='"+ UserName +"' ";
            resultset=statement.executeQuery(qry);
            while(resultset.next()){
                  userName=resultset.getString(1);
                  Pasword=resultset.getString(2);
                  department=resultset.getString(3);
            }
            System.out.println(userName+Pasword+department);
   }
    public String getUserName(){
        return userName;
   }
    public String getPass(){
        return Pasword;
    }
    public String getDepartment(){
        return department;
    }


   
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MySQL().setVisible(true);
            }
        });
    }
    private Connection connection;
    private Statement statement;
    private ResultSet resultset;
    private String userName;
    private String Pasword;
    private String department;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
