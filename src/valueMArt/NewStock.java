/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewStock.java
 *
 * Created on Jan 5, 2012, 8:16:47 PM
 */

package valueMart;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;

/**
 *
 * @author FhAD khAn
 */
public class NewStock extends javax.swing.JFrame {

    /** Creates new form NewStock */
    public NewStock() {
        initComponents();
        
      /* Set System Time and Date*/
        Calendar cal = new GregorianCalendar();
      String hour = String.valueOf(cal.get(Calendar.HOUR_OF_DAY));
      String minute = String.valueOf(cal.get(Calendar.MINUTE));
      String second = String.valueOf(cal.get(Calendar.SECOND));
      Time.setText(hour + ":" + minute + ":" + second);
      
        Calendar Cal=Calendar.getInstance();
        SimpleDateFormat simple=new SimpleDateFormat("dd/MM/yyyy");
        Date.setText(simple.format(Cal.getTime()));
      
      /* MySQl connection */
      
        String url = "jdbc:mysql://localhost:3306/valuemart";
        String user = "root";
        String password = "";

        cb_catageryID.removeAllItems();
        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            statement = (Statement) connection.createStatement();
            resultset=statement.executeQuery("Select  CatalogID,ProductID from product ");
            while (resultset.next()) {
                String CId=resultset.getString(1);
                String PID=resultset.getString(2);
              cb_catageryID.addItem(CId);
                            
            }
            
         } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
        check=true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ManageOrder1 = new javax.swing.JLabel();
        ManageOrder = new javax.swing.JLabel();
        ManageOrder2 = new javax.swing.JLabel();
        Time = new javax.swing.JTextField();
        ManageOrder3 = new javax.swing.JLabel();
        Date = new javax.swing.JTextField();
        ManageOrder4 = new javax.swing.JLabel();
        ManageOrder5 = new javax.swing.JLabel();
        ManageOrder6 = new javax.swing.JLabel();
        ManageOrder8 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        ManageOrder9 = new javax.swing.JLabel();
        ManageOrder10 = new javax.swing.JLabel();
        ManageOrder13 = new javax.swing.JLabel();
        ManageOrder14 = new javax.swing.JLabel();
        ManageOrder16 = new javax.swing.JLabel();
        ManageOrder17 = new javax.swing.JLabel();
        ManageOrder18 = new javax.swing.JLabel();
        ManageOrder19 = new javax.swing.JLabel();
        PlaceOrder2 = new javax.swing.JButton();
        cb_catageryID = new javax.swing.JComboBox();
        newPrice = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        Damage = new javax.swing.JTextField();
        newArrival = new javax.swing.JTextField();
        productId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("New Stock");
        setResizable(false);

        ManageOrder1.setFont(new java.awt.Font("Forte", 1, 14));
        ManageOrder1.setText("NEw Stock");

        ManageOrder.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder.setText("Catalog ID");

        ManageOrder2.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder2.setText("Product ID");

        Time.setEnabled(false);
        Time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeActionPerformed(evt);
            }
        });

        ManageOrder3.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder3.setText("Time");

        Date.setEnabled(false);
        Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateActionPerformed(evt);
            }
        });

        ManageOrder4.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder4.setText("Date");

        ManageOrder5.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder5.setText("Quantity");

        ManageOrder6.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder6.setText("Price");

        ManageOrder8.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder8.setText("New Arrival");

        quantityField.setEditable(false);
        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });

        ManageOrder9.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder9.setText("New Price");

        ManageOrder10.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder10.setText("Damge");

        ManageOrder13.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder13.setText("iteam(s)");

        ManageOrder14.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder14.setText("Pkr");

        ManageOrder16.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder16.setText("item(s)");

        ManageOrder17.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder17.setText("pkr");

        ManageOrder18.setFont(new java.awt.Font("Forte", 1, 12));
        ManageOrder18.setText("item(s)");

        ManageOrder19.setFont(new java.awt.Font("Forte", 1, 14));
        ManageOrder19.setText("New Stock");

        PlaceOrder2.setFont(new java.awt.Font("Forte", 1, 12));
        PlaceOrder2.setText("Save");
        PlaceOrder2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceOrder2ActionPerformed(evt);
            }
        });

        cb_catageryID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_catageryIDActionPerformed(evt);
            }
        });

        newPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPriceActionPerformed(evt);
            }
        });

        priceField.setEditable(false);
        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });

        Damage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DamageActionPerformed(evt);
            }
        });

        newArrival.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newArrivalActionPerformed(evt);
            }
        });

        productId.setEditable(false);
        productId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ManageOrder6)
                                .addGap(18, 18, 18)
                                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ManageOrder8)
                                .addGap(18, 18, 18)
                                .addComponent(newArrival, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ManageOrder9)
                                .addGap(18, 18, 18)
                                .addComponent(newPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ManageOrder10)
                                .addGap(18, 18, 18)
                                .addComponent(Damage, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PlaceOrder2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ManageOrder18)
                            .addComponent(ManageOrder17)
                            .addComponent(ManageOrder16)
                            .addComponent(ManageOrder14))
                        .addGap(334, 334, 334))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(ManageOrder5)
                                .addGap(18, 18, 18)
                                .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ManageOrder13))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ManageOrder)
                                    .addComponent(ManageOrder3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_catageryID, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(ManageOrder2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(productId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ManageOrder4)
                                        .addGap(18, 18, 18)
                                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(200, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ManageOrder19)
                        .addGap(277, 277, 277))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ManageOrder19)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder)
                    .addComponent(cb_catageryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder2)
                    .addComponent(productId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder3)
                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ManageOrder4)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder5)
                    .addComponent(ManageOrder13)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder6)
                    .addComponent(ManageOrder14)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder8)
                    .addComponent(ManageOrder16)
                    .addComponent(newArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder9)
                    .addComponent(ManageOrder17)
                    .addComponent(newPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageOrder10)
                    .addComponent(ManageOrder18)
                    .addComponent(Damage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(PlaceOrder2)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeActionPerformed

    private void DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void PlaceOrder2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceOrder2ActionPerformed
        String PID=productId.getText();
        String CID=cb_catageryID.getSelectedItem().toString();
        String quan=quantityField.getText();
        String price=priceField.getText();
        String date=Date.getText();
        String time=Time.getText();
        price=newPrice.getText();
        quan=Integer.toString(Integer.parseInt(quan)+Integer.parseInt(newArrival.getText()));
        quan=Integer.toString(Integer.parseInt(quan)-Integer.parseInt(Damage.getText()));
        try {
            statement.executeUpdate("INSERT INTO stock(PID,CID,StockQty,Date,Time,Price) VALUES('" + PID + "','" + CID + "','" + quan + "','" + date + "','" +time + "','" + price + "')");
       
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }

    }//GEN-LAST:event_PlaceOrder2ActionPerformed

private void newPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPriceActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_newPriceActionPerformed

private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_priceFieldActionPerformed

private void DamageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DamageActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_DamageActionPerformed

private void newArrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newArrivalActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_newArrivalActionPerformed

private void cb_catageryIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_catageryIDActionPerformed
    String CID =cb_catageryID.getSelectedItem().toString();
    if(check==true){
        try{
            resultset=statement.executeQuery("Select ProductID from product where CatalogID='"+CID +"'  ");
                    while (resultset.next()) {
                        String PID=resultset.getString(1);
                        productId.setText(PID);
                    }
                    resultset=statement.executeQuery("Select Price,Quantity from placeorder where CID='"+CID +"' ");
                    
                    while (resultset.next()) {
                        String Price=resultset.getString(1);
                        String Quan=resultset.getString(2);
                        quantityField.setText(Quan);
                        priceField.setText(Price);
                    }
        } catch (Exception ex) {
                System.err.println(ex.getMessage());
        }
    }
}//GEN-LAST:event_cb_catageryIDActionPerformed

private void productIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_productIdActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NewStock().setVisible(true);
            }
        });
    }
    private boolean check =false;
    private Connection connection;
    private Statement statement;
    private ResultSet resultset;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Damage;
    private javax.swing.JTextField Date;
    private javax.swing.JLabel ManageOrder;
    private javax.swing.JLabel ManageOrder1;
    private javax.swing.JLabel ManageOrder10;
    private javax.swing.JLabel ManageOrder13;
    private javax.swing.JLabel ManageOrder14;
    private javax.swing.JLabel ManageOrder16;
    private javax.swing.JLabel ManageOrder17;
    private javax.swing.JLabel ManageOrder18;
    private javax.swing.JLabel ManageOrder19;
    private javax.swing.JLabel ManageOrder2;
    private javax.swing.JLabel ManageOrder3;
    private javax.swing.JLabel ManageOrder4;
    private javax.swing.JLabel ManageOrder5;
    private javax.swing.JLabel ManageOrder6;
    private javax.swing.JLabel ManageOrder8;
    private javax.swing.JLabel ManageOrder9;
    private javax.swing.JButton PlaceOrder2;
    private javax.swing.JTextField Time;
    private javax.swing.JComboBox cb_catageryID;
    private javax.swing.JTextField newArrival;
    private javax.swing.JTextField newPrice;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField productId;
    private javax.swing.JTextField quantityField;
    // End of variables declaration//GEN-END:variables

}
